{"version":3,"sources":["reload.svg","Components/Reload.js","Components/Clock.js","Components/Credits.js","Components/Image.js","Components/ItemsList.js","Components/MemoList.js","Components/Quote.js","Components/Unsplash.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Reload","props","react_default","a","createElement","src","svgIcon","className","alt","onClick","imageClick","Clock","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","Date","inherits","createClass","key","value","_this2","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","Component","Credits","href","Image","style","backgroundImage","concat","ItemsList","items","map","item","id","text","MemoList","handleChange","event","target","handleSubmit","preventDefault","newItem","now","newItems","localStorage","setItem","JSON","stringify","parse","getItem","console","log","ItemsList_ItemsList","onSubmit","type","onChange","length","Quote","quote","author","fetchAsync","_fetchAsync","asyncToGenerator","regenerator_default","mark","_callee","result","quoteObj","_ref","wrap","_context","prev","next","fetch","sent","json","body","t0","stop","apply","arguments","Unsplash","url","Components_Clock","Components_Reload","Components_MemoList","Components_Image","Components_Quote","Components_Credits","Boolean","window","location","hostname","match","ReactDOM","render","Components_Unsplash","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7381a46d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reload.dbda2823.svg\";","import React from 'react';\nimport svgIcon from \"../reload.svg\";\nimport \"../Styles/Reload.css\"\n\nconst Reload = (props) => {\n    return (\n        <img src={svgIcon} className=\"reload\" alt=\"logo\" onClick={props.imageClick} />\n    )\n}\n\nexport default Reload\n\n\n","import React, { Component } from 'react'\nimport \"../Styles/Clock.css\"\n\nexport class Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { date: new Date() };\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"clock\">\n                {this.state.date.toLocaleTimeString()}\n            </div>\n        );\n    }\n}\n\nexport default Clock\n","import React from 'react';\nimport \"../Styles/Credits.css\"\n\nconst Credits = () => {\n    return (\n        <div className=\"credits\">\n            Credits: <a href=\"https://unsplash.com\">Unsplash</a>&nbsp;&&nbsp;\n            <a href=\"https://www.svgrepo.com/svg/125334/reload\">SVGrepo</a>\n        </div>\n    )\n}\n\nexport default Credits\n","import React from 'react';\nimport '../Styles/Image.css'\n\nconst Image = (props) => {\n    return (\n        <div className=\"img\" style={{ backgroundImage: `url(${props.src})` }} />\n    )\n}\n\nexport default Image;","import React, { Component } from 'react'\nimport '../Styles/ItemsList.css'\n\nexport default class ItemsList extends Component {\n    render() {\n        return (\n            <ul>\n                {this.props.items.map(\n                    item => (\n                        <li key={item.id}>{item.text}</li>\n                    )\n                )}\n            </ul>\n        )\n    }\n}","import React, { Component } from 'react'\nimport \"../Styles/MemoList.css\"\nimport ItemsList from './ItemsList';\n\nexport class MemoList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.localStorage = JSON.parse(localStorage.getItem('items'))\n        console.log(localStorage.getItem('items'))\n        console.log(this.localStorage)\n        this.items = (this.localStorage !== null ? this.localStorage : [])\n\n        this.state = {\n            text: '',\n            items: this.items\n            // this.state.items = JSON.parse(localStorage.getItem(\"items\")) || [];\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ text: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        // eslint-disable-next-line\n        const newItem = {\n            id: Date.now(),\n            text: this.state.text\n        }\n        const newItems = this.state.items.concat(newItem);\n        this.setState(\n            state => ({\n                items: newItems,\n                text: ''\n            })\n        )\n        // update localStorage\n        localStorage.setItem(\"items\", JSON.stringify(newItems));\n    }\n\n    render() {\n        return (\n            <div className=\"memolist\">\n                <h3>My plan for the day!</h3>\n\n                <ItemsList items={this.state.items} />\n\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" id=\"listItem\" onChange={this.handleChange} value={this.state.text}></input>\n                    <button>\n                        Add #{this.state.items.length + 1}\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default MemoList\n","import React, { Component } from 'react';\n\nimport \"../Styles/Quote.css\"\n\n\nexport class Quote extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            quote: '',\n            author: ''\n        };\n    }\n\n    componentDidMount() {\n        this.fetchAsync();\n    }\n\n    async fetchAsync() {\n        const url = 'https://favqs.com/api/qotd';\n\n        try {\n            const result = await fetch(url);\n            const quoteObj = await result.json();\n            console.log(quoteObj)\n            const { body: quote, author } = await quoteObj.quote;\n\n            this.setState({\n                quote: quote,\n                author: author\n            })\n\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n\n    render() {\n        return (\n            <div className=\"qod\">\n                {this.state.quote} <p>({this.state.author})</p>\n            </div>\n\n        )\n    }\n}\n\nexport default Quote\n","import React, { Component } from 'react';\nimport Reload from \"./Reload\";\nimport Clock from './Clock';\nimport Credits from './Credits';\nimport Image from './Image';\nimport MemoList from './MemoList';\nimport Quote from './Quote';\nimport \"../Styles/Unsplash.css\"\n\n\nexport class Unsplash extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            src: ''\n        };\n    }\n\n    componentDidMount() {\n        this.fetchAsync();\n    }\n\n    async fetchAsync() {\n        const url = 'https://source.unsplash.com/random';\n\n        try {\n            const result = await fetch(url);\n            console.log(result)\n            this.setState({\n                src: result.url,\n            })\n\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    imageClick = () => {\n        console.log(\"Change background!\")\n        this.fetchAsync();\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Clock />\n                <Reload imageClick={this.imageClick} />\n                <MemoList />\n                <Image src={this.state.src} />\n                <Quote />\n                <Credits />\n            </div>\n\n        )\n    }\n}\n\nexport default Unsplash\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Unsplash from './Components/Unsplash';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Unsplash />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}